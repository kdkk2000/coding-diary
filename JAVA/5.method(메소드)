메소드란? 작업을 수행하기 위한 명령문의 집합
어떤 값을 입력받아서 처리하고 그 결과를 돌려준다(입력 받는 값이 없을 수도 있고 결과를 돌려주지 않을 수도 있다.)
메소드의 장점과 작성지침, 반복적으로 수행되는 여러 문장을 메소드로 작성한다.
------------------------------------------------------------------------------------
package com.lec.ex;
// 1~10까지 정수의 합과 그 결과가 짝수인지 홀수인지 출력
public class Ex02 {
	private static int sum(int from, int to) {
		int sum = 0; // 누적할 변수
		for(int i=from ; i<=to ; i++) {
			sum += i;
		}
		return sum;
	}	
	private static String evenOdd(int value) {
		String result = value%2==0 ? "짝수입니다":"홀수입니다";
		return result;
	}
	public static void main(String[] args) {
		int tot = sum(1, 10);
		System.out.println("1~10까지 정수의 합은 " + tot);
		System.out.println( evenOdd(tot) );
		// --------------------------------------------------
		tot = sum(10, 100);
		System.out.println("10~100까지 정수의 합은 " + tot);
		System.out.println( evenOdd(tot) );
	}
}
-------------------------------------------------------------------------------
package com.lec.quiz;
import java.util.Scanner;
public class Quiz {
	public static void main(String[] args) {
		// 사용자로 부터 2~9까지의 원하는 구구단을 받는다.
		Scanner sc = new Scanner(System.in);
		int dansu;
		do {
			System.out.print("출력을 원하는 구구단 수는 ?(2~9단까지만 돼)");
			dansu = sc.nextInt();
		}while(dansu < 2 || dansu>9);
		guguPrint(dansu);// 사용자로부터 받은 수의 구구단을 출력
	}
	private static void guguPrint(int dansu) {// 사용자로부터 받은 수의 구구단을 출력
		for(int i=1 ; i<10 ; i++) {
			System.out.printf("%d * %d = %d\n", dansu, i, dansu*i);
		}
	}
}
